{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/enhancementOfJobbyApp/src/components/FiltersGroup/index.js\";\nimport './index.css';\n\n// These are the lists used in the application. You can move them to any component needed.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst employmentTypesList = [{\n  label: 'Full Time',\n  employmentTypeId: 'FULLTIME'\n}, {\n  label: 'Part Time',\n  employmentTypeId: 'PARTTIME'\n}, {\n  label: 'Freelance',\n  employmentTypeId: 'FREELANCE'\n}, {\n  label: 'Internship',\n  employmentTypeId: 'INTERNSHIP'\n}];\nconst salaryRangesList = [{\n  salaryRangeId: '1000000',\n  label: '10 LPA and above'\n}, {\n  salaryRangeId: '2000000',\n  label: '20 LPA and above'\n}, {\n  salaryRangeId: '3000000',\n  label: '30 LPA and above'\n}, {\n  salaryRangeId: '4000000',\n  label: '40 LPA and above'\n}];\nconst locationTypesList = [{\n  label: 'Bangalore',\n  locationTypeId: 'BANGALORE'\n}, {\n  label: 'Hyderabad',\n  locationTypeId: 'HYDERABAD'\n}, {\n  label: 'Chennai',\n  locationTypeId: 'CHENNAI'\n}, {\n  label: 'Delhi',\n  locationTypeId: 'DELHI'\n}, {\n  label: 'Mumbai',\n  locationTypeId: 'MUMBAI'\n}];\nconst FiltersGroup = props => {\n  const renderEmploymentTypesList = () => {\n    const {\n      updateEmploymentTypesChecked\n    } = props;\n    return employmentTypesList.map(eachType => {\n      const updateTypeslist = () => updateEmploymentTypesChecked(eachType.employmentTypeId);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"fliters-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox-input\",\n          id: eachType.employmentTypeId,\n          onChange: updateTypeslist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: eachType.employmentTypeId,\n          className: \"filter-label\",\n          children: eachType.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, eachType.employmentTypeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderEmploymentTypes = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"filter-heading\",\n      children: \"Type of Employment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters-list\",\n      children: renderEmploymentTypesList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderLocationTypesList = () => {\n    const {\n      updateLocationTypesChecked\n    } = props;\n    return locationTypesList.map(eachType => {\n      const updateLocationlist = () => updateLocationTypesChecked(eachType.locationTypeId);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"fliters-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox-input\",\n          id: eachType.locationTypeId,\n          onChange: updateLocationlist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: eachType.locationTypeId,\n          className: \"filter-label\",\n          children: eachType.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, eachType.locationTypeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderLocationTypes = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"filter-heading\",\n      children: \"Type of Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters-list\",\n      children: renderLocationTypesList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderSalaryRangesList = () => {\n    const {\n      updateSalaryRangeId,\n      activeSalaryRangeId\n    } = props;\n    return salaryRangesList.map(eachRange => {\n      const onChangeRange = () => updateSalaryRangeId(eachRange.salaryRangeId);\n      const isChecked = eachRange.salaryRangeId === activeSalaryRangeId;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"fliters-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"checkbox-input\",\n          id: eachRange.salaryRangeId,\n          name: \"salary ranges\",\n          onChange: onChangeRange,\n          checked: isChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: eachRange.salaryRangeId,\n          className: \"filter-label\",\n          children: eachRange.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, eachRange.salaryRangeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderSalaryRangesTypes = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"filter-heading\",\n      children: \"Salary Range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters-list\",\n      children: renderSalaryRangesList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-group-container\",\n    children: [renderEmploymentTypes(), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), renderSalaryRangesTypes(), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), renderLocationTypes()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_c = FiltersGroup;\nexport default FiltersGroup;\nvar _c;\n$RefreshReg$(_c, \"FiltersGroup\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","locationTypesList","locationTypeId","FiltersGroup","props","renderEmploymentTypesList","updateEmploymentTypesChecked","map","eachType","updateTypeslist","className","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","renderEmploymentTypes","renderLocationTypesList","updateLocationTypesChecked","updateLocationlist","renderLocationTypes","renderSalaryRangesList","updateSalaryRangeId","activeSalaryRangeId","eachRange","onChangeRange","isChecked","name","checked","renderSalaryRangesTypes","_c","$RefreshReg$"],"sources":["/home/workspace/reactjs/coding-practices/enhancementOfJobbyApp/src/components/FiltersGroup/index.js"],"sourcesContent":["import './index.css'\n\n// These are the lists used in the application. You can move them to any component needed.\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst locationTypesList = [\n  {\n    label: 'Bangalore',\n    locationTypeId: 'BANGALORE',\n  },\n  {\n    label: 'Hyderabad',\n    locationTypeId: 'HYDERABAD',\n  },\n  {\n    label: 'Chennai',\n    locationTypeId: 'CHENNAI',\n  },\n  {\n    label: 'Delhi',\n    locationTypeId: 'DELHI',\n  },\n  {\n    label: 'Mumbai',\n    locationTypeId: 'MUMBAI',\n  },\n]\n\nconst FiltersGroup = props => {\n  const renderEmploymentTypesList = () => {\n    const {updateEmploymentTypesChecked} = props\n\n    return employmentTypesList.map(eachType => {\n      const updateTypeslist = () =>\n        updateEmploymentTypesChecked(eachType.employmentTypeId)\n\n      return (\n        <li className=\"fliters-list-item\" key={eachType.employmentTypeId}>\n          <input\n            type=\"checkbox\"\n            className=\"checkbox-input\"\n            id={eachType.employmentTypeId}\n            onChange={updateTypeslist}\n          />\n          <label htmlFor={eachType.employmentTypeId} className=\"filter-label\">\n            {eachType.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderEmploymentTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Type of Employment</h1>\n      <ul className=\"filters-list\">{renderEmploymentTypesList()}</ul>\n    </>\n  )\n\n  const renderLocationTypesList = () => {\n    const {updateLocationTypesChecked} = props\n\n    return locationTypesList.map(eachType => {\n      const updateLocationlist = () =>\n        updateLocationTypesChecked(eachType.locationTypeId)\n\n      return (\n        <li className=\"fliters-list-item\" key={eachType.locationTypeId}>\n          <input\n            type=\"checkbox\"\n            className=\"checkbox-input\"\n            id={eachType.locationTypeId}\n            onChange={updateLocationlist}\n          />\n          <label htmlFor={eachType.locationTypeId} className=\"filter-label\">\n            {eachType.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderLocationTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Type of Location</h1>\n      <ul className=\"filters-list\">{renderLocationTypesList()}</ul>\n    </>\n  )\n\n  const renderSalaryRangesList = () => {\n    const {updateSalaryRangeId, activeSalaryRangeId} = props\n\n    return salaryRangesList.map(eachRange => {\n      const onChangeRange = () => updateSalaryRangeId(eachRange.salaryRangeId)\n\n      const isChecked = eachRange.salaryRangeId === activeSalaryRangeId\n\n      return (\n        <li className=\"fliters-list-item\" key={eachRange.salaryRangeId}>\n          <input\n            type=\"radio\"\n            className=\"checkbox-input\"\n            id={eachRange.salaryRangeId}\n            name=\"salary ranges\"\n            onChange={onChangeRange}\n            checked={isChecked}\n          />\n          <label htmlFor={eachRange.salaryRangeId} className=\"filter-label\">\n            {eachRange.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderSalaryRangesTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Salary Range</h1>\n      <ul className=\"filters-list\">{renderSalaryRangesList()}</ul>\n    </>\n  )\n\n  return (\n    <div className=\"filters-group-container\">\n      {renderEmploymentTypes()}\n      <hr className=\"separator\" />\n      {renderSalaryRangesTypes()}\n      <hr className=\"separator\" />\n      {renderLocationTypes()}\n    </div>\n  )\n}\n\nexport default FiltersGroup\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}