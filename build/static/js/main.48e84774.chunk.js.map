{"version":3,"sources":["components/ProtectedRoute/index.js","components/Login/index.js","components/Header/index.js","components/Home/index.js","components/ProfileDetails/index.js","components/FiltersGroup/index.js","components/JobCard/index.js","components/Jobs/index.js","components/SimilarJobCard/index.js","components/JobItemDetails/index.js","components/NotFound/index.js","App.js","index.js"],"names":["ProtectedRoute","props","undefined","Cookies","get","_jsx","Redirect","to","Route","_objectSpread","LoginPage","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","username","password","showErrorMsg","errorMsg","onSuccessfulLogin","jwtToken","set","expires","history","replace","onFailureLogin","setState","onSubmitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_this$state","userDetail","options","response","data","wrap","_context","prev","next","preventDefault","method","body","JSON","stringify","fetch","sent","json","console","log","ok","jwt_token","error_msg","stop","_x","apply","updateUsername","target","value","updatePassword","renderUsernameField","_jsxs","className","children","htmlFor","type","placeholder","id","onChange","renderPasswordField","_inherits","_createClass","key","_this$state2","this","onSubmit","src","alt","Component","withRouter","onClickLogout","remove","Link","AiFillHome","BsFillBriefcaseFill","onClick","FiLogOut","Home","Header","apiStatusConstants","ProfileDetails","profileApiStatus","Loader","color","height","width","profileDetail","name","profileImageUrl","shortBio","renderProfile","getProfileDetails","renderProfileFailure","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","locationTypesList","locationTypeId","FiltersGroup","renderEmploymentTypesList","updateEmploymentTypesChecked","map","eachType","renderLocationTypesList","updateLocationTypesChecked","renderSalaryRangesList","updateSalaryRangeId","activeSalaryRangeId","eachRange","isChecked","checked","_Fragment","JobCard","jobDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","AiFillStar","IoLocationSharp","Jobs","profileDetails","jobsList","jobsApiStatus","searchInput","employmentTypesChecked","locationTypesChecked","typeId","updatedList","includes","filter","_toConsumableArray","getJobs","updatedLocationList","each","employTypes","apiUrl","jobs","updatedData","join","headers","Authorization","eachJob","company_logo_url","employment_type","job_description","package_per_annum","_callee2","_context2","profile_details","profile_image_url","short_bio","renderSearchBar","searchBarID","e","BsSearch","renderSideBar","renderNoJobsView","renderJobsList","_this$state3","filteredJobsList","toUpperCase","renderJobsLoaderView","renderJobsApiFailureView","renderJobsBasedOnAPiStatus","SimilarJobCard","JobItemDetails","jobDetailsApiStatus","similarJobs","getCamelCasedData","job_details","updatedJobDetails","companyWebsiteUrl","company_website_url","skills","eachSkill","imageUrl","image_url","lifeAtCompnay","description","life_at_company","similar_jobs","getJobItemDetails","match","params","_this$getCamelCasedDa","renderLoaderView","renderApiFailureView","renderJobDetails","href","FiExternalLink","renderJobDetailsPage","NotFound","App","Switch","exact","path","component","Login","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.48e84774.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nimport {Redirect, Route} from 'react-router-dom'\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass LoginPage extends Component {\n  state = {username: '', password: '', showErrorMsg: false, errorMsg: ''}\n\n  onSuccessfulLogin = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  onFailureLogin = errorMsg => {\n    this.setState({errorMsg, showErrorMsg: true})\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n\n    const userDetail = {username, password}\n\n    const loginApiUrl = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetail),\n    }\n\n    const response = await fetch(loginApiUrl, options)\n    const data = await response.json()\n    console.log(data)\n\n    if (response.ok) {\n      this.onSuccessfulLogin(data.jwt_token)\n    } else {\n      this.onFailureLogin(data.error_msg)\n    }\n  }\n\n  updateUsername = event => this.setState({username: event.target.value})\n\n  updatePassword = event => this.setState({password: event.target.value})\n\n  renderUsernameField = () => {\n    const {username} = this.state\n    return (\n      <div className=\"input-field-container\">\n        <label htmlFor=\"username\" className=\"login-input-label\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          value={username}\n          className=\"login-input-field\"\n          placeholder=\"Username\"\n          id=\"username\"\n          onChange={this.updateUsername}\n        />\n      </div>\n    )\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n    return (\n      <div className=\"input-field-container\">\n        <label htmlFor=\"password\" className=\"login-input-label\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          value={password}\n          className=\"login-input-field\"\n          placeholder=\"Password\"\n          id=\"password\"\n          onChange={this.updatePassword}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const {showErrorMsg, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={this.onSubmitForm}>\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo-login-form\"\n          />\n          {this.renderUsernameField()}\n          {this.renderPasswordField()}\n          <div>\n            <button type=\"submit\" className=\"login-button\">\n              Login\n            </button>\n            {showErrorMsg && <p className=\"error-msg\">*{errorMsg}</p>}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginPage\n","import {Link, withRouter} from 'react-router-dom'\nimport {AiFillHome} from 'react-icons/ai'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-container\">\n        <Link to=\"/\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"home-website-logo\"\n          />\n        </Link>\n        <ul className=\"nav-items\">\n          <li>\n            <Link to=\"/\" className=\"nav-link-lg\">\n              Home\n            </Link>\n            <Link to=\"/\" className=\"nav-link-sm\">\n              <AiFillHome className=\"small-header-icons\" />\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/jobs\" className=\"nav-link-lg\">\n              Jobs\n            </Link>\n            <Link to=\"/jobs\" className=\"nav-link-sm\">\n              <BsFillBriefcaseFill className=\"small-header-icons\" />\n            </Link>\n          </li>\n\n          <li className=\"logout-btn-list-item-small\">\n            <button\n              type=\"button\"\n              className=\"logout-button-sm\"\n              onClick={onClickLogout}\n            >\n              <FiLogOut className=\"logout-icon-sm\" aria-label=\"logout\" />\n            </button>\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"logout-button-lg\"\n          onClick={onClickLogout}\n        >\n          Logout\n        </button>\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\nimport Header from '../Header'\nimport './index.css'\n\nconst Home = () => (\n  <div className=\"home-container\">\n    <Header />\n    <div className=\"home-page\">\n      <div className=\"home-page-content\">\n        <h1 className=\"home-heading\">Find The Job That Fits Your Life</h1>\n        <p className=\"home-description\">\n          Millions of people are searching for jobs, salary information, company\n          reviews. Find the job that fits your abilities and potential.\n        </p>\n        <Link to=\"/jobs\">\n          <button className=\"find-jobs-button\" type=\"button\">\n            Find Jobs\n          </button>\n        </Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Home\n","import Loader from 'react-loader-spinner'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst ProfileDetails = props => {\n  const renderProfile = () => {\n    const {profileDetail} = props\n    const {name, profileImageUrl, shortBio} = profileDetail\n\n    return (\n      <div className=\"profile-details-container\">\n        <img src={profileImageUrl} alt=\"profile\" className=\"profile-image\" />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-bio\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  const renderProfileFailure = () => {\n    const {getProfileDetails} = props\n    return (\n      <div className=\"profile-failure-container\">\n        <button\n          className=\"retry-button\"\n          type=\"button\"\n          onClick={getProfileDetails}\n        >\n          Retry\n        </button>\n      </div>\n    )\n  }\n\n  const renderProfileLoader = () => (\n    <div className=\"loader-container-profile\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  const {profileApiStatus} = props\n\n  switch (profileApiStatus) {\n    case apiStatusConstants.inProgress:\n      return renderProfileLoader()\n    case apiStatusConstants.success:\n      return renderProfile()\n    case apiStatusConstants.failure:\n      return renderProfileFailure()\n    default:\n      return null\n  }\n}\n\nexport default ProfileDetails\n","import './index.css'\n\n// These are the lists used in the application. You can move them to any component needed.\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst locationTypesList = [\n  {\n    label: 'Bangalore',\n    locationTypeId: 'BANGALORE',\n  },\n  {\n    label: 'Hyderabad',\n    locationTypeId: 'HYDERABAD',\n  },\n  {\n    label: 'Chennai',\n    locationTypeId: 'CHENNAI',\n  },\n  {\n    label: 'Delhi',\n    locationTypeId: 'DELHI',\n  },\n  {\n    label: 'Mumbai',\n    locationTypeId: 'MUMBAI',\n  },\n]\n\nconst FiltersGroup = props => {\n  const renderEmploymentTypesList = () => {\n    const {updateEmploymentTypesChecked} = props\n\n    return employmentTypesList.map(eachType => {\n      const updateTypeslist = () =>\n        updateEmploymentTypesChecked(eachType.employmentTypeId)\n\n      return (\n        <li className=\"fliters-list-item\" key={eachType.employmentTypeId}>\n          <input\n            type=\"checkbox\"\n            className=\"checkbox-input\"\n            id={eachType.employmentTypeId}\n            onChange={updateTypeslist}\n          />\n          <label htmlFor={eachType.employmentTypeId} className=\"filter-label\">\n            {eachType.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderEmploymentTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Type of Employment</h1>\n      <ul className=\"filters-list\">{renderEmploymentTypesList()}</ul>\n    </>\n  )\n\n  const renderLocationTypesList = () => {\n    const {updateLocationTypesChecked} = props\n\n    return locationTypesList.map(eachType => {\n      const updateLocationlist = () =>\n        updateLocationTypesChecked(eachType.locationTypeId)\n\n      return (\n        <li className=\"fliters-list-item\" key={eachType.locationTypeId}>\n          <input\n            type=\"checkbox\"\n            className=\"checkbox-input\"\n            id={eachType.locationTypeId}\n            onChange={updateLocationlist}\n          />\n          <label htmlFor={eachType.locationTypeId} className=\"filter-label\">\n            {eachType.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderLocationTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Type of Location</h1>\n      <ul className=\"filters-list\">{renderLocationTypesList()}</ul>\n    </>\n  )\n\n  const renderSalaryRangesList = () => {\n    const {updateSalaryRangeId, activeSalaryRangeId} = props\n\n    return salaryRangesList.map(eachRange => {\n      const onChangeRange = () => updateSalaryRangeId(eachRange.salaryRangeId)\n\n      const isChecked = eachRange.salaryRangeId === activeSalaryRangeId\n\n      return (\n        <li className=\"fliters-list-item\" key={eachRange.salaryRangeId}>\n          <input\n            type=\"radio\"\n            className=\"checkbox-input\"\n            id={eachRange.salaryRangeId}\n            name=\"salary ranges\"\n            onChange={onChangeRange}\n            checked={isChecked}\n          />\n          <label htmlFor={eachRange.salaryRangeId} className=\"filter-label\">\n            {eachRange.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderSalaryRangesTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Salary Range</h1>\n      <ul className=\"filters-list\">{renderSalaryRangesList()}</ul>\n    </>\n  )\n\n  return (\n    <div className=\"filters-group-container\">\n      {renderEmploymentTypes()}\n      <hr className=\"separator\" />\n      {renderSalaryRangesTypes()}\n      <hr className=\"separator\" />\n      {renderLocationTypes()}\n    </div>\n  )\n}\n\nexport default FiltersGroup\n","import {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {Link} from 'react-router-dom'\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n    id,\n  } = jobDetails\n  return (\n    <li className=\"job-card\">\n      <Link to={`/jobs/${id}`} className=\"job-card-link\">\n        <div className=\"logo-title-container-card\">\n          <img\n            src={companyLogoUrl}\n            alt=\"company logo\"\n            className=\"company-logo-card\"\n          />\n          <div className=\"title-rating-container-card\">\n            <h1 className=\"job-title-card\">{title}</h1>\n            <div className=\"rating-container-card\">\n              <AiFillStar className=\"star-icon-card\" />\n              <p className=\"rating-number-card\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"location-package-container-card\">\n          <div className=\"icon-type-container-card\">\n            <IoLocationSharp className=\"type-icon\" />\n            <p className=\"type-text\">{location}</p>\n          </div>\n          <div className=\"icon-type-container-card\">\n            <BsFillBriefcaseFill className=\"type-icon\" />\n            <p className=\"type-text\">{employmentType}</p>\n          </div>\n          <p className=\"package-text\">{packagePerAnnum}</p>\n        </div>\n        <hr className=\"separator\" />\n        <h1 className=\"description-heading-card\">Description</h1>\n        <p className=\"job-description-card\">{jobDescription}</p>\n      </Link>\n    </li>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {BsSearch} from 'react-icons/bs'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport ProfileDetails from '../ProfileDetails'\nimport FiltersGroup from '../FiltersGroup'\nimport JobCard from '../JobCard'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Jobs extends Component {\n  state = {\n    profileDetails: {},\n    profileApiStatus: apiStatusConstants.initial,\n    jobsList: [],\n    jobsApiStatus: apiStatusConstants.initial,\n    searchInput: '',\n    activeSalaryRangeId: '',\n    employmentTypesChecked: [],\n    locationTypesChecked: [],\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n    this.getJobs()\n  }\n\n  updateEmploymentTypesChecked = typeId => {\n    const {employmentTypesChecked} = this.state\n    let updatedList = employmentTypesChecked\n    if (employmentTypesChecked.includes(typeId)) {\n      updatedList = employmentTypesChecked.filter(\n        eachType => eachType !== typeId,\n      )\n    } else {\n      updatedList = [...updatedList, typeId]\n    }\n\n    this.setState({employmentTypesChecked: updatedList}, this.getJobs)\n  }\n\n  updateLocationTypesChecked = typeId => {\n    const {locationTypesChecked} = this.state\n    let updatedLocationList = locationTypesChecked\n    if (locationTypesChecked.includes(typeId)) {\n      updatedLocationList = locationTypesChecked.filter(each => each !== typeId)\n    } else {\n      updatedLocationList = [...updatedLocationList, typeId]\n    }\n    this.setState({locationTypesChecked: updatedLocationList}, this.getJobs)\n  }\n\n  updateSalaryRangeId = activeSalaryRangeId =>\n    this.setState({activeSalaryRangeId}, this.getJobs)\n\n  getJobs = async () => {\n    this.setState({jobsApiStatus: apiStatusConstants.inProgress})\n\n    const {\n      activeSalaryRangeId,\n      employmentTypesChecked,\n      searchInput,\n    } = this.state\n    const employTypes = employmentTypesChecked.join(',')\n\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/jobs?employment_type=${employTypes}&minimum_package=${activeSalaryRangeId}&search=${searchInput}`\n\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n\n    if (response.ok === true) {\n      const data = await response.json()\n\n      const {jobs} = data\n      const updatedData = jobs.map(eachJob => ({\n        companyLogoUrl: eachJob.company_logo_url,\n        employmentType: eachJob.employment_type,\n        id: eachJob.id,\n        jobDescription: eachJob.job_description,\n        location: eachJob.location,\n        packagePerAnnum: eachJob.package_per_annum,\n        rating: eachJob.rating,\n        title: eachJob.title,\n      }))\n      this.setState({\n        jobsList: updatedData,\n        jobsApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({jobsApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  getProfileDetails = async () => {\n    this.setState({profileApiStatus: apiStatusConstants.inProgress})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = 'https://apis.ccbp.in/profile'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    const data = await response.json()\n\n    if (response.ok) {\n      const profileDetail = data.profile_details\n      const updatedData = {\n        name: profileDetail.name,\n        profileImageUrl: profileDetail.profile_image_url,\n        shortBio: profileDetail.short_bio,\n      }\n      this.setState({\n        profileDetails: updatedData,\n        profileApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({profileApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderSearchBar = searchBarID => {\n    const {searchInput} = this.state\n    return (\n      <div className=\"search-bar\" id={searchBarID}>\n        <input\n          className=\"search-input\"\n          type=\"search\"\n          placeholder=\"Search\"\n          value={searchInput}\n          onChange={e => this.setState({searchInput: e.target.value})}\n        />\n        <button\n          className=\"search-button\"\n          type=\"button\"\n          data-testid=\"searchButton\"\n          onClick={() => this.getJobs()}\n        >\n          <BsSearch className=\"search-icon\" aria-label=\"search\" />\n        </button>\n      </div>\n    )\n  }\n\n  renderSideBar = () => {\n    const {\n      profileDetails,\n      profileApiStatus,\n      activeSalaryRangeId,\n      employmentTypesChecked,\n      locationTypesChecked,\n    } = this.state\n    return (\n      <div className=\"side-bar\">\n        {this.renderSearchBar('smallSearchBar')}\n        <ProfileDetails\n          profileDetail={profileDetails}\n          profileApiStatus={profileApiStatus}\n          getProfileDetails={this.getProfileDetails}\n        />\n        <hr className=\"separator\" />\n        <FiltersGroup\n          updateSalaryRangeId={this.updateSalaryRangeId}\n          activeSalaryRangeId={activeSalaryRangeId}\n          updateEmploymentTypesChecked={this.updateEmploymentTypesChecked}\n          employmentTypesChecked={employmentTypesChecked}\n          updateLocationTypesChecked={this.updateLocationTypesChecked}\n          locationTypesChecked={locationTypesChecked}\n        />\n      </div>\n    )\n  }\n\n  renderNoJobsView = () => (\n    <div className=\"no-jobs-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n        alt=\"no jobs\"\n        className=\"no-jobs-image\"\n      />\n      <h1 className=\"no-jobs-heading\">No Jobs Found</h1>\n      <p className=\"no-jobs-description\">\n        We could not find any jobs. Try other filters.\n      </p>\n    </div>\n  )\n\n  renderJobsList = () => {\n    const {jobsList, locationTypesChecked} = this.state\n    console.log(jobsList)\n    let filteredJobsList = jobsList\n\n    if (locationTypesChecked.length > 0) {\n      filteredJobsList = jobsList.filter(eachJob =>\n        locationTypesChecked.includes(eachJob.location.toUpperCase()),\n      )\n    }\n    return (\n      <>\n        {jobsList.length > 0 ? (\n          <ul className=\"jobs-list\">\n            {filteredJobsList.map(eachJob => (\n              <JobCard key={eachJob.id} jobDetails={eachJob} />\n            ))}\n          </ul>\n        ) : (\n          this.renderNoJobsView()\n        )}\n      </>\n    )\n  }\n\n  renderJobsLoaderView = () => (\n    <div className=\"jobs-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobsApiFailureView = () => (\n    <div className=\"jobs-api-failure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"job-api-failure-image\"\n      />\n      <h1 className=\"failure-view-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-view-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={() => this.getJobs()}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobsBasedOnAPiStatus = () => {\n    const {jobsApiStatus} = this.state\n\n    switch (jobsApiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderJobsLoaderView()\n      case apiStatusConstants.success:\n        return this.renderJobsList()\n      case apiStatusConstants.failure:\n        return this.renderJobsApiFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"jobs-page-container\">\n        <Header />\n        <div className=\"jobs-page\">\n          {this.renderSideBar()}\n          <div className=\"jobs-container\">\n            {this.renderSearchBar('largeSearchBar')}\n            {this.renderJobsBasedOnAPiStatus()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Jobs\n","import {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    rating,\n    title,\n  } = jobDetails\n\n  return (\n    <li className=\"similar-job-card\">\n      <div className=\"logo-title-container-card\">\n        <img\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n          className=\"company-logo-card\"\n        />\n        <div className=\"title-rating-container-card\">\n          <h1 className=\"job-title-card\">{title}</h1>\n          <div className=\"rating-container-card\">\n            <AiFillStar className=\"star-icon-card\" />\n            <p className=\"rating-number-card\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description-heading-card\">Description</h1>\n      <p className=\"job-description-card\">{jobDescription}</p>\n      <div className=\"location-package-container-card\">\n        <div className=\"icon-type-container-card\">\n          <IoLocationSharp className=\"type-icon\" />\n          <p className=\"type-text\">{location}</p>\n        </div>\n        <div className=\"icon-type-container-card\">\n          <BsFillBriefcaseFill className=\"type-icon\" />\n          <p className=\"type-text\">{employmentType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJobCard\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiExternalLink} from 'react-icons/fi'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport SimilarJobCard from '../SimilarJobCard'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobDetailsApiStatus: apiStatusConstants.initial,\n    jobDetails: {},\n    similarJobs: [],\n  }\n\n  componentDidMount() {\n    this.getJobItemDetails()\n  }\n\n  getCamelCasedData = data => {\n    const jobDetails = data.job_details\n\n    const updatedJobDetails = {\n      companyLogoUrl: jobDetails.company_logo_url,\n      companyWebsiteUrl: jobDetails.company_website_url,\n      employmentType: jobDetails.employment_type,\n      jobDescription: jobDetails.job_description,\n      location: jobDetails.location,\n      rating: jobDetails.rating,\n      title: jobDetails.title,\n      packagePerAnnum: jobDetails.package_per_annum,\n      skills: jobDetails.skills.map(eachSkill => ({\n        imageUrl: eachSkill.image_url,\n        name: eachSkill.name,\n      })),\n      lifeAtCompnay: {\n        description: jobDetails.life_at_company.description,\n        imageUrl: jobDetails.life_at_company.image_url,\n      },\n    }\n\n    const similarJobs = data.similar_jobs.map(eachJob => ({\n      companyLogoUrl: eachJob.company_logo_url,\n      employmentType: eachJob.employment_type,\n      id: eachJob.id,\n      jobDescription: eachJob.job_description,\n      location: eachJob.location,\n      rating: eachJob.rating,\n      title: eachJob.title,\n    }))\n\n    return {updatedJobDetails, similarJobs}\n  }\n\n  getJobItemDetails = async () => {\n    this.setState({jobDetailsApiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const apiUrl = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      const {updatedJobDetails, similarJobs} = this.getCamelCasedData(data)\n\n      this.setState({\n        jobDetails: updatedJobDetails,\n        similarJobs,\n        jobDetailsApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({jobDetailsApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoaderView = () => (\n    <div className=\"jobs-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderApiFailureView = () => (\n    <div className=\"jobs-api-failure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"job-api-failure-image\"\n      />\n      <h1 className=\"failure-view-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-view-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={() => this.getJobItemDetails()}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobDetails = () => {\n    const {jobDetails, similarJobs} = this.state\n    const {\n      companyLogoUrl,\n      employmentType,\n      jobDescription,\n      location,\n      rating,\n      title,\n      packagePerAnnum,\n      companyWebsiteUrl,\n      skills,\n      lifeAtCompnay,\n    } = jobDetails\n\n    return (\n      <div className=\"job-details-content-container\">\n        <div className=\"job-details\">\n          <div className=\"logo-title-container-card\">\n            <img\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n              className=\"company-logo-card\"\n            />\n            <div className=\"title-rating-container-card\">\n              <h1 className=\"job-title-card\">{title}</h1>\n              <div className=\"rating-container-card\">\n                <AiFillStar className=\"star-icon-card\" />\n                <p className=\"rating-number-card\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"location-package-container-card\">\n            <div className=\"icon-type-container-card\">\n              <IoLocationSharp className=\"type-icon\" />\n              <p className=\"type-text\">{location}</p>\n            </div>\n            <div className=\"icon-type-container-card\">\n              <BsFillBriefcaseFill className=\"type-icon\" />\n              <p className=\"type-text\">{employmentType}</p>\n            </div>\n            <p className=\"package-text\">{packagePerAnnum}</p>\n          </div>\n\n          <hr className=\"separator\" />\n          <div className=\"description-visit-link-container\">\n            <h1 className=\"description-heading-card\">Description</h1>\n            <a href={companyWebsiteUrl} className=\"company-link\">\n              Visit\n              <FiExternalLink className=\"external-link-logo\" />\n            </a>\n          </div>\n          <p className=\"job-description-card\">{jobDescription}</p>\n          <h1 className=\"skills-heading\">Skills</h1>\n          <ul className=\"skills-list\">\n            {skills.map(eachSkill => {\n              const {imageUrl, name} = eachSkill\n              return (\n                <li className=\"skill-item\" key={name}>\n                  <img src={imageUrl} alt={name} className=\"skill-image\" />\n                  <p className=\"skill-name\">{name}</p>\n                </li>\n              )\n            })}\n          </ul>\n          <h1 className=\"life-at-company-heading\">Life at Company</h1>\n          <div className=\"company-life-container\">\n            <p className=\"life-description\">{lifeAtCompnay.description}</p>\n            <img\n              className=\"life-image\"\n              src={lifeAtCompnay.imageUrl}\n              alt=\"life at company\"\n            />\n          </div>\n        </div>\n        <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(eachJob => (\n            <SimilarJobCard key={eachJob.id} jobDetails={eachJob} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderJobDetailsPage() {\n    const {jobDetailsApiStatus} = this.state\n    switch (jobDetailsApiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      case apiStatusConstants.success:\n        return this.renderJobDetails()\n      case apiStatusConstants.failure:\n        return this.renderApiFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"job-details-page\">\n        <Header />\n        {this.renderJobDetailsPage()}\n      </div>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-page\">\n    <div className=\"not-found-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"not-found-image\"\n      />\n      <h1 className=\"not-found-heading\">Page Not Found</h1>\n      <p className=\"not-found-description\">\n        We are sorry, the page you requested could not be found\n      </p>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import {Switch, Redirect, Route} from 'react-router-dom'\n\nimport ProtectedRoute from './components/ProtectedRoute'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport JobItemDetails from './components/JobItemDetails'\nimport NotFound from './components/NotFound'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route exact path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"/not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}